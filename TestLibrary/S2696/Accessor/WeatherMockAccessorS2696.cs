using Microsoft.Extensions.Logging;using TestLibrary.S2696.Models;namespace TestLibrary.S2696.Accessor{public class WeatherMockAccessor: WeatherAccessorBase{private static int _callCount = 0;public WeatherMockAccessor(ILogger<WeatherMockAccessor> logger): base(logger){ }public override Task<List<WeatherModelCelsius>> GetWeather(string? argument){UpdateCallCount();var weather = GenerateWeatherData(argument).ToList();if (!weather.Any()){throw new DataNotFoundException("No weather data available.");}return Task.FromResult(weather.ToList());}private static IEnumerable<WeatherModelCelsius> GenerateWeatherData(string? argument){var random = string.IsNullOrWhiteSpace(argument) ? new Random(_callCount) : new Random(argument?.GetHashCode() ?? 0);int count;if (string.IsNullOrWhiteSpace(argument)){count = _callCount; }else if (!int.TryParse(argument, out count)){count = 10; }for (var i = 0; i < count; i++){yield return new WeatherModelCelsius(random.Next(-20, 45));}}private static void UpdateCallCount(){_callCount++;}}}